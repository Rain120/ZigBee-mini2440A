###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         01/Dec/2016  15:32:08 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\GenericApp-GetAddr\Source\Coordina #
#                          tor.c                                              #
#    Command line       =  -f "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Samples\GenericApp-GetAddr\CC2530DB\.. #
#                          \..\..\Tools\CC2530DB\f8wEndev.cfg" (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3         #
#                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f          #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\GenericApp-GetAddr\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO     #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000         #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\Source\Coordinator.c"    #
#                          -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D         #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -lC "C:\Texas                     #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\EndDeviceEB\Lis #
#                          t\" -lA "C:\Texas Instruments\ZStack-CC2530-2.5.1a #
#                          \Projects\zstack\Samples\GenericApp-GetAddr\CC2530 #
#                          DB\EndDeviceEB\List\" --diag_suppress Pe001,Pa010  #
#                          -o "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Samples\GenericApp-GetAddr\CC2530DB\En #
#                          dDeviceEB\Obj\" -e --no_code_motion --debug        #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Texas                  #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\" -I "C:\Texas  #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\Source\" -I  #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\GenericApp-GetAddr\CC2530DB\..\.. #
#                          \..\ZMain\TI2530DB\" -I "C:\Texas                  #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\hal\include\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\hal\target\CC2530EB\" -I "C:\Texas      #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\mac\include\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\mac\high_level\" -I "C:\Texas           #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\mac\low_level\srf04\" -I "C:\Texas      #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\mac\low_level\srf04\single_chip\" -I    #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\GenericApp-GetAddr\CC2530DB\..\.. #
#                          \..\..\..\Components\mt\" -I "C:\Texas             #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\osal\include\" -I "C:\Texas             #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\services\saddr\" -I "C:\Texas           #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\services\sdata\" -I "C:\Texas           #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\af\" -I "C:\Texas                 #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\nwk\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\sapi\" -I "C:\Texas               #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\sec\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\sys\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\zdo\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\" -I "C:\Texas                     #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp-GetAddr\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\" -Ohz --require_prototypes    #
#    List file          =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\GenericApp-GetAddr\CC2530DB\EndDev #
#                          iceEB\List\Coordinator.lst                         #
#    Object file        =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\GenericApp-GetAddr\CC2530DB\EndDev #
#                          iceEB\Obj\Coordinator.r51                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\GenericApp-GetAddr\Source\Coordinator.c
      1          
      2          /*********************************************************************
      3           * INCLUDES
      4           */
      5          #include "OSAL.h"
      6          #include "AF.h"
      7          #include "ZDApp.h"
      8          #include "ZDObject.h"
      9          #include "ZDProfile.h"
     10          
     11          #include "Coordinator.h"
     12          #include "DebugTrace.h"
     13          
     14          #if !defined( WIN32 )
     15            #include "OnBoard.h"
     16          #endif
     17          
     18          /* HAL */
     19          #include "hal_lcd.h"
     20          #include "hal_led.h"
     21          #include "hal_key.h"
     22          #include "hal_uart.h"
     23          
     24          #include "aps_groups.h"
     25          
     26          
     27          
     28          /*********************************************************************
     29           * GLOBAL VARIABLES
     30           */
     31          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     32          const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
   \                     GenericApp_ClusterList:
   \   000000   0100         DW 1
     33          {
     34            GENERICAPP_CLUSTERID
     35          };
     36          

   \                                 In  segment XDATA_ROM_C, align 1
     37          const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
   \                     GenericApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F         DW 3844
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW GenericApp_ClusterList
   \   000009   00           DB 0
   \   00000A   0000         DW 0H
     38          {
     39            GENERICAPP_ENDPOINT,              //  int Endpoint;
     40            GENERICAPP_PROFID,                //  uint16 AppProfId[2];
     41            GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     42            GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     43            GENERICAPP_FLAGS,                 //  int   AppFlags:4;
     44            GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     45            (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
     46            0,          //  byte  AppNumInClusters;
     47            (cId_t *)NULL   //  byte *pAppInClusterList;
     48          };
     49          
     50          // This is the Endpoint/Interface description.  It is defined here, but
     51          // filled-in in GenericApp_Init().  Another way to go would be to fill
     52          // in the structure here and make it a "const" (in code space).  The
     53          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     54          endPointDesc_t GenericApp_epDesc;
   \                     GenericApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     55          
     56          /*********************************************************************
     57           * LOCAL VARIABLES
     58           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     59          byte GenericApp_TaskID;   // Task ID for internal task/event processing
   \                     GenericApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     60                                    // This variable will be received when
     61                                    // GenericApp_Init() is called.
     62          
     63          /*********************************************************************
     64           * @fn      GenericApp_Init
     65           *
     66           * @brief   Initialization function for the Generic App Task.
     67           *          This is called during initialization and should contain
     68           *          any application specific initialization (ie. hardware
     69           *          initialization/setup, table initialization, power up
     70           *          notificaiton ... ).
     71           *
     72           * @param   task_id - the ID assigned by OSAL.  This ID should be
     73           *                    used to send messages and set timers.
     74           *
     75           * @return  none
     76           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          void GenericApp_Init( uint8 task_id )
   \                     GenericApp_Init:
     78          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     79            GenericApp_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#GenericApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
     80          
     81          
     82            // Fill out the endpoint description.
     83            GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
   \   00000A   90....       MOV     DPTR,#GenericApp_epDesc
   \   00000D   740A         MOV     A,#0xa
   \   00000F   F0           MOVX    @DPTR,A
     84            GenericApp_epDesc.task_id = &GenericApp_TaskID;
   \   000010   A3           INC     DPTR
   \   000011   74..         MOV     A,#GenericApp_TaskID & 0xff
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   74..         MOV     A,#(GenericApp_TaskID >> 8) & 0xff
   \   000017   F0           MOVX    @DPTR,A
     85            GenericApp_epDesc.simpleDesc
     86                      = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
   \   000018   A3           INC     DPTR
   \   000019   74..         MOV     A,#GenericApp_SimpleDesc & 0xff
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   74..         MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
   \   00001F   F0           MOVX    @DPTR,A
     87            GenericApp_epDesc.latencyReq = noLatencyReqs;
   \   000020   A3           INC     DPTR
   \   000021   E4           CLR     A
   \   000022   F0           MOVX    @DPTR,A
     88            afRegister(&GenericApp_epDesc);
   \   000023                ; Setup parameters for call to function afRegister
   \   000023   7A..         MOV     R2,#GenericApp_epDesc & 0xff
   \   000025   7B..         MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
   \   000027   12....       LCALL   ??afRegister?relay
     89          }
   \   00002A   7F01         MOV     R7,#0x1
   \   00002C   02....       LJMP    ?BANKED_LEAVE_XDATA
     90          
     91          /*********************************************************************
     92           * @fn      GenericApp_ProcessEvent
     93           *
     94           * @brief   Generic Application Task event processor.  This function
     95           *          is called to process all events for the task.  Events
     96           *          include timers, messages and any other user defined events.
     97           *
     98           * @param   task_id  - The OSAL assigned task ID.
     99           * @param   events - events to process.  This is a bit map and can
    100           *                   contain more than one event.
    101           *
    102           * @return  none
    103           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    104          uint16 GenericApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     GenericApp_ProcessEvent:
    105          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    106          
    107            return 0;
   \   000000   7A00         MOV     R2,#0x0
   \   000002   7B00         MOV     R3,#0x0
   \   000004   02....       LJMP    ?BRET
    108          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_ProcessEvent
    109          
    110          

   Maximum stack usage in bytes:

     Function                ISTACK PSTACK XSTACK
     --------                ------ ------ ------
     GenericApp_Init             0      0      9
       -> afRegister             0      0     18
     GenericApp_ProcessEvent     0      0      0


   Segment part sizes:

     Function/Label                  Bytes
     --------------                  -----
     GenericApp_ClusterList             2
     GenericApp_SimpleDesc             12
     GenericApp_epDesc                  6
     GenericApp_TaskID                  1
     GenericApp_Init                   47
     GenericApp_ProcessEvent            7
     ??GenericApp_Init?relay            6
     ??GenericApp_ProcessEvent?relay    6

 
 54 bytes in segment BANKED_CODE
 12 bytes in segment BANK_RELAYS
 14 bytes in segment XDATA_ROM_C
  7 bytes in segment XDATA_Z
 
 66 bytes of CODE  memory
 14 bytes of CONST memory
  7 bytes of XDATA memory

Errors: none
Warnings: none
